---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app qbittorrent
  namespace: downloaders
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.0.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  dependsOn:
    - name: longhorn
      namespace: longhorn-system
  values:
    controller:
      type: statefulset
    image:
      repository: ghcr.io/onedr0p/qbittorrent
      tag: 4.4.5@sha256:51153d31dd1dca2ec67256827ace50dc38911cdbef19cc4d318e92bb84a1ea45
    env:
      TZ: "${TIMEZONE}"
      QBITTORRENT__PORT: &port 80
      QBITTORRENT__BT_PORT: &port-bt 50413
    service:
      main:
        ports:
          http:
            port: *port
      bittorrent:
        enabled: true
        type: LoadBalancer
        externalIPs: ["${SVC_QBITTORRENT_ADDR}"]
        ports:
          bittorrent:
            enabled: true
            port: *port-bt
            protocol: TCP
            targetPort: *port-bt
        externalTrafficPolicy: Local
    ingress:
      main:
        enabled: true
        ingressClassName: "nginx"
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
          external-dns.home.arpa/enabled: "true"
          hajimari.io/enable: "true"
          hajimari.io/appName: "qBittorrent"
          hajimari.io/icon: "arrow-down-box"
          nginx.ingress.kubernetes.io/configuration-snippet: |
            proxy_hide_header "x-webkit-csp";
            proxy_hide_header "content-security-policy";
            proxy_hide_header "X-Frame-Options";
            proxy_set_header Accept-Encoding "";
            sub_filter '</head>' '<link rel="stylesheet" type="text/css" href="https://theme-park.${SECRET_DOMAIN}/css/base/qbittorrent/dark.css"></head>';
            sub_filter_once on;
        hosts:
          - host: &host "qb.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
            secretName: "qb-tls"
    podSecurityContext:
      fsGroup: 0
    volumeClaimTemplates:
      - name: config
        mountPath: /config
        accessMode: ReadWriteOnce
        size: 1Gi
        storageClass: longhorn-retain
        # labels:
        #   snapshot.home.arpa/enabled: "true"
    persistence:
      downloads:
        enabled: true
        type: nfs
        server: "scorpion.${SECRET_PRIVATE_DOMAIN}"
        path: /volume1/data/downloads
        mountPath: /downloads
      media:
        enabled: true
        type: nfs
        server: "scorpion.${SECRET_PRIVATE_DOMAIN}"
        path: /volume1/data/media
        mountPath: /media
      incomplete:
        enabled: true
        type: emptyDir
    # nodeSelector:
    #   node-role.kubernetes.io/control-plane: "false"
    resources:
      requests:
        cpu: 10m
        memory: 250Mi
      limits:
        memory: 6000Mi
