---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: splunk-operator
  namespace: splunk-operator
spec:
  interval: 15m
  chart:
    spec:
      chart: splunk-operator
      version: 2.2.0
      sourceRef:
        kind: HelmRepository
        name: splunk
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  dependsOn:
    - name: longhorn
      namespace: longhorn-system
  values:
    image:
      repository: docker.io/splunk/splunk
      pullPolicy: IfNotPresent
      tag: 9.0.3-a2@sha256:df383555a9f1c688a02f3b8428f43327877af0ffa6dbd96b49ff2c5e255ba955
    kubeRbacProxy:
      image:
        repository: gcr.io/kubebuilder/kube-rbac-proxy
        pullPolicy: IfNotPresent
        tag: "v0.14.0@sha256:e2670fb55b3211fb101f17afa3d81ba816d7c0b76ed31bd3d93fa2affb491595"
      resources:
        limits:
          cpu: 500m
          memory: 128Mi
        requests:
          cpu: 5m
          memory: 64Mi
    splunkOperator:
      image:
        repository: docker.io/splunk/splunk-operator
        pullPolicy: IfNotPresent
        tag: 2.2.0@sha256:c64846ebd3393134d2a4cc50ff644622e231169d0941291b4f31ec0791335cbd
      imagePullSecrets: []
      clusterWideAccess: true
      watchNamespaces: ""
      annotations: {}
      podAnnotations: {}
      containerSecurityContext:
        allowPrivilegeEscalation: false
      securityContext:
        runAsUser: 1001
        fsGroup: 1001
        runAsNonRoot: true
      hostNetwork: false
      hostPID: false
      hostIPC: false
      livenessProbe:
        httpGet:
          path: /healthz
          port: 8081
        initialDelaySeconds: 15
        periodSeconds: 20
      readinessProbe:
        httpGet:
          path: /readyz
          port: 8081
        initialDelaySeconds: 5
        periodSeconds: 10
      service:
        type: ClusterIP
        ports:
          - name: http
            port: 80
            protocol: TCP
            targetPort: http
      # - name: metric
      #   port: 8080
      #   protocol: TCP
      #   targetPort: 8080
      resources:
        limits:
          cpu: 1000m
          memory: 2000Mi
        requests:
          cpu: 1000m
          memory: 2000Mi
      nodeSelector: {}
      tolerations: []
      affinity: {}
      terminationGracePeriodSeconds: 10
      volumes:
        - name: app-staging
          persistentVolumeClaim:
            claimName: splunk-operator-app-download
      volumeMounts:
        - mountPath: /opt/splunk/appframework/
          name: app-staging
