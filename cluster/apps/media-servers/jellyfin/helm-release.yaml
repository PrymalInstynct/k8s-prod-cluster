---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app jellyfin
  namespace: media-servers
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.2.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  # dependsOn:
    # - name: intel-gpu-plugin
    #   namespace: default
    # - name: node-feature-discovery
    #   namespace: default
    # - name: longhorn
    #   namespace: longhorn-system
  values:
    controller:
      type: statefulset
    image:
      repository: ghcr.io/onedr0p/jellyfin
      tag: 10.8.8@sha256:342c94a24b9c12e6b5a4de2d506229b9313d39026404a8137be1df9481ed0e68
    env:
      TZ: "${TIMEZONE}"
    service:
      main:
        type: LoadBalancer
        externalIPs: ["${SVC_JELLYFIN_ADDR}"]
        externalTrafficPolicy: Local
        ports:
          http:
            port: 8096
    ingress:
      main:
        enabled: true
        ingressClassName: "nginx"
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
          hajimari.io/enable: "true"
          hajimari.io/appName: "Jellyfin"
          hajimari.io/icon: simple-icons:jellyfin
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
            secretName: "jellyfin-tls"
    podSecurityContext:
      fsGroup: 0
    volumeClaimTemplates:
      - name: config
        mountPath: /config
        accessMode: ReadWriteOnce
        size: 50Gi
        storageClass: longhorn-retain
        # labels:
        #   snapshot.home.arpa/enabled: "true"
    persistence:
      media:
        enabled: true
        type: nfs
        server: "scorpion.${SECRET_PRIVATE_DOMAIN}"
        path: /volume1/data/media
        mountPath: /media
        readOnly: true
      transcode:
        enabled: true
        type: emptyDir
    # affinity:
    #   nodeAffinity:
    #     requiredDuringSchedulingIgnoredDuringExecution:
    #       nodeSelectorTerms:
    #         - matchExpressions:
    #             - key: feature.node.kubernetes.io/custom-intel-gpu
    #               operator: In
    #               values:
    #                 - "true"
    resources:
      requests:
        # gpu.intel.com/i915: 1
        cpu: 1000m
        memory: 2000Mi
      limits:
        # gpu.intel.com/i915: 1
        memory: 16000Mi
